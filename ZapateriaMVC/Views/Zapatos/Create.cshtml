@model ZapateriaMVC.Models.Zapatos

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Share/MasterAdmin.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Nuevo Zapato</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Foto</label>
            <div class="col-md-10">
                <input type="file" name="fotozapato" class="form-control" />
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Categoria" class="form-control">
                    <option value="1">Hombre</option>
                    <option value="2">Mujer</option>
                </select>
                @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Colores</label>
            <div id="colores">
                <div class="col-md-1">
                    <input type="color" name="zapatocolor" class="form-control"/>
                </div>
            </div>
            <div class="col-md-1">
                <button class="btn btn-info" type="button" onclick="createNewColorInput()">Agregar otro color</button>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Colores</label>
            <div id="talla">
                <div class="col-md-1">
                    <input type="number" name="talla" class="form-control" />
                </div>
            </div>
            <div class="col-md-1">
               <button class="btn btn-info" type="button" onclick="createNewTallaInput()">Agregar otra talla</button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script>
        function createNewColorInput()
        {
            var div = $(document.createElement('div')).attr("class", "col-md-1")
            var input = $(document.createElement('input'))
            .attr("type", 'color').attr("class", 'form-control').attr("name", 'zapatocolor');
            div.append(input);
            $("#colores").append(div)
        }
        function createNewTallaInput() {
            var div = $(document.createElement('div')).attr("class", "col-md-1")
            var input = $(document.createElement('input'))
            .attr("type", 'number').attr("class", 'form-control').attr("name", 'talla');
            div.append(input);
            $("#talla").append(div)
        }
    </script>
}